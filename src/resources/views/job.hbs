  <header class="job-search">
     <a data-href="{{bestFL._id}}" class="best-companyFL">
    <div class="background-image" style="background: url('{{bestFL.background}}') center/cover no-repeat;"></div>
    <div class="info-bestfl">
    <span>&#62;&#62;&#62;</span>
    <span class="best-fl-name"> {{bestFL.companyname}} {{bestFL.typeofbusiness}} is the company with the most followers on the website</span>
    <span>&#60;&#60;&#60;</span>
    </div>
    <img src="/img/viewnow.png" class="apply-bestfl">
    <span class="close-best-fl"><i class="bi bi-x-lg"></i></span>
  </a>
    <div class="header-search">
      <div class="navbar-left">
        <div class="header-text">
            <a href="#toTop"><span>ViggaWorks</span></a>
            <a class="litle-text" href="#toTop"><p >empower growth</p></a>
        </div>
        <a class="navbar-left-img" href="#toTop"><img src="/img/LOGOVGA.png" alt=""></a>
      </div>
      <form class="input-search" action="/job/search">
      <input name="search" id="search" type="search">
      <label for="search"><i class="bi bi-search"></i></label>
      <button type="submit">Search</button>
      </form>
    </div>
</header>
  <div class="container-jobs">
      <h1 class="jobs-matched">{{count}} Jobs Matched</h1>
  <div class="main-jobs">
    <div class="card-jobs">
      {{#each job}}
      <div class="card-job">
        <div class="avatar-company">
          <img src="{{this.avatar}}" alt="" onerror="this.src='/img/notfoundavatar.jpeg'">
        </div>
        <div class="card-job__info">
        <a href="/job/{{this._id}}" class="job-name">{{this.jobname}}</a>
        <a href="/company/{{this.idcompany}}" class="job__company-name">{{this.companyname}}</a>
        <p class="job-desc" title="{{this.jobdesc}}">{{this.jobdesc}}</p>
        <p>{{this.joblocation}}</p>
        </div>
        <div class="card-job__action">
          <p class="job-salary">{{this.salary}}</p>
        </div>
      </div>
      {{/each}}
    <div class="pagination">
      {{#each pages}}
      <a href="/job?page={{this}}" data-page="{{this}}">{{this}}</a>
      {{/each}}
    </div>
    </div>
    <div class="jobs-ads">
      <div class="best-job">
        <a class="best-job__link" href="/company/{{bestCP._id}}">
        <span class="primary-text">Top Hirring Company</span>
        <img src="{{bestCP.background}}" alt="" class="best-job__background" onerror="this.src='/img/notfoundavatar.jpeg'" >
        <img src="{{bestCP.avatar}}" alt="" class="best-job__avatar" onerror="this.src='/img/notfoundavatar.jpeg'">
        </a>
        <div class="main__best-job">
          <span class="best-job__company-name">{{bestCP.companyname}} {{bestCP.typeofbusiness}}</span>
          <a href="/company/job/{{bestCP._id}}" class="best-job__count">{{bestCP.jobcount}} Opening Jobs</a>
        </div>
      </div>
      <div class="ads-TPcompany">
        <img src="/img/posterads2.png" alt="">
      </div>
      <div class="ads-NYcompany">
        <img src="/img/posteradsNhuY.png" alt="">
      </div>
      <div class="ads-LRcompany">
        <img src="/img/posteradsLR.jpg" alt="">
      </div>
    </div>
  </div>
  </div>
<script>
  var closeBestFL = document.querySelector('.close-best-fl i');
  var boxBestCompanyFl = document.querySelector('.best-companyFL');
  var deleteMargin = document.querySelector('.container-jobs');
  var link = boxBestCompanyFl.getAttribute('data-href');
  var clickBTN = document.querySelector('.background-image');
  var applyBestFL = document.querySelector('.apply-bestfl');
  var infoBestFL = document.querySelector('.info-bestfl');
  infoBestFL.addEventListener('click',()=>{
    boxBestCompanyFl.href = `/company/${link}`;
  });
  applyBestFL.addEventListener('click',()=>{
    boxBestCompanyFl.href = `/company/${link}`;
  });
  clickBTN.addEventListener('click',()=>{
    boxBestCompanyFl.href = `/company/${link}`;
  });
  closeBestFL.addEventListener('click',()=>{
    boxBestCompanyFl.style.cssText = "opacity: 0";
    deleteMargin.style.margin = '0';
    setTimeout(function(){
      boxBestCompanyFl.style.display = 'none';
    },200)
  });
window.addEventListener('scroll', function() {
  var scrollPosition = window.pageYOffset || document.documentElement.scrollTop;
  var boxDisplay = getComputedStyle(boxBestCompanyFl).getPropertyValue('display');

  if (boxDisplay === 'none') {
    if (scrollPosition >= 85) {
      document.querySelector('.header-search').style.cssText = 'position: fixed; top: 0; box-shadow: 1px 1px 10px rgba(0,0,0,0.5);';
      deleteMargin.style.cssText = 'margin-top: 80px';
    } else {
      document.querySelector('.header-search').style.cssText = 'position: unset; box-shadow: unset;';
      deleteMargin.style.margin = '0';
    }
  } else if (boxDisplay === 'flex') {
    if (scrollPosition >= 192) {
      document.querySelector('.header-search').style.cssText = 'position: fixed; top: 0; box-shadow: 1px 1px 10px rgba(0,0,0,0.5);';
      deleteMargin.style.cssText = 'margin-top: 85px';
    } else {
      document.querySelector('.header-search').style.cssText = 'position: unset; box-shadow: unset;';
      deleteMargin.style.margin = '0';
    }
  }
});
var getPagination = document.querySelectorAll('.pagination a');
var paginationContainer = document.querySelector('.pagination');
if (getPagination.length > 1) {
  paginationContainer.style.display = 'flex';
} else {
  paginationContainer.style.display = 'none';
}
getPagination.forEach(function(pageLink) {
  pageLink.addEventListener('click', function(event) {
    if (pageLink.classList.contains('active')) {
      event.preventDefault();
    } else {
      var page = pageLink.getAttribute('data-page');
      localStorage.setItem('currentPageJob', page);
    }
  });
});
document.addEventListener('DOMContentLoaded', function() {
  var currentPage = localStorage.getItem('currentPageJob');
  if (currentPage !== null) {
    getPagination.forEach(function(pageLink) {
      var page = pageLink.getAttribute('data-page');
      if (page == currentPage) {
        pageLink.classList.add('active');
      }
    });
  }
});
</script>

{{!-- <script>
var paginationForm = document.getElementById('paginationForm');
var getPagination = paginationForm.getAttribute('data-id');
var currentPage = localStorage.getItem('currentPage') || 1; 

for (let i = 1; i <= (getPagination.length * getPagination); i++) {
  var newPage = document.createElement('input');
  newPage.setAttribute("type", "button");
  newPage.name = 'pagination';
  newPage.value = i;
  newPage.setAttribute("readonly", "readonly");
  if (i === parseInt(currentPage)) {
    newPage.classList.add('active'); 
  }
  document.querySelector('.number-pagination').appendChild(newPage);
}

var newPages = document.querySelectorAll('input[name="pagination"]');
newPages.forEach(function(newPage) {
  newPage.addEventListener('click', function() {
    if (!newPage.classList.contains('active')) {
      currentPage = parseInt(newPage.value);
      localStorage.setItem('currentPage', currentPage);
      paginationForm.submit();
    }
  });
});
</script> --}}

