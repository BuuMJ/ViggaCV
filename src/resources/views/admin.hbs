<div class="container-admin" data-admin="{{getEmail user}}">
    <header>
        <div class="box-total">
            <p class="title">total revenue</p>
            <p class="total-content">$ {{annualRevenue.0.totalRevenue}}</p>
            <a class="view-detail__total" href="#revenue">View Detail <i class="bi bi-chevron-double-down"></i></a>
        </div>
        <div class="box-total box__total-user">
            <p class="title">total user</p>
            <p class="total-content" data-user="{{countUser}}" data-company="{{countCompany}}"></p>
            <a class="view-detail__total" href="#user-chart">View Detail <i class="bi bi-chevron-double-down"></i></a>
        </div>
        <div class="box-total box__total-thismonth">
            <p class="title">total revenue this month</p>
            <p class="total-content" data-current-month="{{totalRevenueCurrentMonth}}">$ {{totalRevenueCurrentMonth}}</p>
            <a class="view-detail__total" href="#revenue">View Detail <i class="bi bi-chevron-double-down"></i></a>
        </div>
        <div class="box-total box__total-job">
            <p class="title">total jobs</p>
            <p class="total-content"><i class="bi bi-briefcase-fill"></i> {{jobCount}}</p>
            <a class="view-detail__total" href="#job">View Detail <i class="bi bi-chevron-double-down"></i></a>
        </div>
    </header>
    <div id="revenue" class="revenue-chart" 
    {{!-- monthly --}}
    data-monthly0="{{monthlyRevenue.0.totalRevenue}}" 
    data-monthly1="{{monthlyRevenue.1.totalRevenue}}"
    data-monthly2="{{monthlyRevenue.2.totalRevenue}}"
    data-monthly3="{{monthlyRevenue.3.totalRevenue}}"
    data-monthly4="{{monthlyRevenue.4.totalRevenue}}"
    data-monthly5="{{monthlyRevenue.5.totalRevenue}}"
    data-monthly6="{{monthlyRevenue.6.totalRevenue}}"
    data-monthly7="{{monthlyRevenue.7.totalRevenue}}"
    data-monthly8="{{monthlyRevenue.8.totalRevenue}}"
    data-monthly9="{{monthlyRevenue.9.totalRevenue}}"
    data-monthly10="{{monthlyRevenue.10.totalRevenue}}"
    data-monthly11="{{monthlyRevenue.11.totalRevenue}}"
    {{!-- quaterly --}}
    data-quaterly0="{{quarterlyRevenue.0.totalRevenue}}"
    data-quaterly1="{{quarterlyRevenue.1.totalRevenue}}"
    data-quaterly2="{{quarterlyRevenue.2.totalRevenue}}"
    data-quaterly3="{{quarterlyRevenue.3.totalRevenue}}"
    {{!-- total --}}
    data-total="{{annualRevenue.0.totalRevenue}}">
    <h1><i class="bi bi-bar-chart-fill"></i> Bar Chart Revenue</h1>
        <canvas id="myChart"></canvas>
    </div>
    <div class="main__revenue-detail">
        <div class="revenue-details">
            <h1 class="title">revenue details</h1>
            <p class="detail-total">$ {{annualRevenue.0.totalRevenue}}</p>
            <p class="available">total available revenue</p>
            <p class="total-revenue"></p>
            <p class="total-ads" data-total-ads="{{revenueSummary.0.prioritizeRevenue}}">Total Job Ads Revenue: <b>$ {{revenueSummary.0.prioritizeRevenue}}</b></p>
            <p class="total-postjob" data-total-postjob="{{revenueSummary.0.postJobRevenue}}">Total Revenue Job High Salary : <b>$ {{revenueSummary.0.postJobRevenue}}</b></p>
            <p class="total-refund" data-total-refuned="{{totalRefund}}">Total Refunded Amount: <b>-$ {{totalRefund}}</b></p>
        </div>
        <div class="box__circle-chart">
            <h1>This Month's Revenue</h1>
            <div class="circle-chart">
                <div class="content"></div>
            </div>
            <p>This Month's Revenue <b>$ {{totalRevenueCurrentMonth}}</b> / <b>$ {{annualRevenue.0.totalRevenue}}</b> Total Revenue</p>
        </div>
    </div>
    {{!-- <div class="success-payment__history">
        <h1>Transaction History</h1>
        <div class="header__payment-history">
            <span class="time">Transaction Time</span>
            <span class="customer">Customer</span>
            <span class="amount">Amount</span>
            <span class="type">Transaction Type</span>
        </div>
        {{#each listJob}}
        <div class="main__payment-history" data-ads-check="{{this.prioritize}}" data-salary-check="{{this.salary}}">
            <span>{{this.createdAt}}</span>
            <span><img src="/{{this.avatar}}" alt="">{{this.companyname}}</span>
            <span>{{}}</span>
        </div>
        {{/each}}
    </div> --}}
    <div class="detail-refuned">
        <div class="box__request-refund">
            <div class="refuned-ads">
                <h1>Request Jobs Ads Refund</h1>
                {{#if listJobRequestPrioritize}}
                <div class="header__refuned-ads">
                    <span>Request Date</span>
                    <span>Job Posting Date</span>
                    <span class="person">Petitioner</span>
                    <span>Refund Amount</span>
                    <span class="action">Action</span>
                </div>
                {{#each listJobRequestPrioritize}}
                    <div class="main__refuned-ads">
                        <span>{{this.updatedAt}}</span>
                        <span>{{this.createdAt}}</span>
                        <span class="person"><img src="/{{this.idcompany.avatar}}" alt="">{{this.idcompany.companyname}}</span>
                        <span>{{this.money}}</span>
                        <span class="action">
                            <form class="refund-succes" action="">
                                <button class="refund-success">Refund</button>
                            </form>
                            <form class="refund-fail" action="">
                                <button class="denied">Denied</button>
                            </form>
                        </span>
                    </div>
                {{/each}}
                {{else}}
                <p>No requests have been sent</p>
                {{/if}}
            </div>
            <div class="refuned-ads">
                <h1>Request Jobs High Paying Refund</h1>
                {{#if listJobRequestPostJob}}
                <div class="header__refuned-ads">
                    <span>Request Date</span>
                    <span>Job Posting Date</span>
                    <span class="person">Petitioner</span>
                    <span>Refund Amount</span>
                    <span class="action">Action</span>
                </div>
                
                {{#each listJobRequestPostJob}}
                    <div class="main__refuned-ads">
                        <span>{{this.updatedAt}}</span>
                        <span>{{this.createdAt}}</span>
                        <span class="person"><img src="/{{this.idcompany.avatar}}" alt="">{{this.idcompany.companyname}}</span>
                        <span>{{this.money}}</span>
                        <span class="action">
                            <form class="refund-succes" action="">
                                <button class="refund-success">Refund</button>
                            </form>
                            <form class="refund-fail" action="">
                                <button class="denied">Denied</button>
                            </form>
                        </span>
                    </div>
                {{/each}}
                {{else}}
                <p>No requests have been sent</p>
                {{/if}}
            </div>
        </div>
        <div class="history-refuned">
            <h1>Refund History</h1>
            <div class="header__history-refuned">
                <span class="date">Refund Date</span>
                <span class="customer">Customer</span>
                <span class="amount">Amount</span>
                <span class="type">Refund Type</span>
                <span class="person">Refunder</span>
            </div>
            {{#each listRefund}}
            <div class="main__history-refuned">
                <span class="date">{{this.updatedAt}}</span>
                <span class="customer"><img src="/{{this.idcompany.avatar}}" alt="">{{this.idcompany.companyname}}</span>
                <span class="amount">$ {{this.money}}</span>
                <span class="refund-type" data-check-type="{{this.money}}"></span>
                <span class="person">{{this.iduser.fullname}}</span>
            </div>
            {{/each}}
        </div>
    </div>
    <div class="detail-revenue">
        <h1>quarterly revenue details</h1>
        <div class="content__total-quarterly first-quarterly">
            <ul class="dropdown__firstquarterly">
                <span class="title">First Quarter </span>
                <p class="view-detail">View Detail <i class="bi bi-caret-down-fill"></i></p>
                <ul class="down__firstquarterly">
                    <li>January Revenue: <b>$ {{monthlyRevenue.0.totalRevenue}}</b></li>
                    <li>February Revenue: <b>$ {{monthlyRevenue.1.totalRevenue}}</b></li>
                    <li>March Revenue: <b>$ {{monthlyRevenue.2.totalRevenue}}</b></li>
                </ul>
                <li class="bottom-total">Total First Quarter Revenue: <b>$ {{quarterlyRevenue.0.totalRevenue}}</b></li>
            </ul>
        </div>
        <div class="content__total-quarterly second-quarterly">
            <ul class="dropdown__secondquarterly">
                <span class="title">Second Quarter</span>
                <p class="view-detail">View Detail <i class="bi bi-caret-down-fill"></i></p>
                <ul class="down__secondquarterly">
                    <li>April Revenue: <b>$ {{monthlyRevenue.3.totalRevenue}}</b></li>
                    <li>May Revenue: <b>$ {{monthlyRevenue.4.totalRevenue}}</b></li>
                    <li>June Revenue: <b>$ {{monthlyRevenue.5.totalRevenue}}</b></li>
                </ul>
                <li class="bottom-total">Total Second Quarter Revenue: <b>$ {{quarterlyRevenue.1.totalRevenue}}</b></li>
            </ul>
        </div>
        <div class="content__total-quarterly third-quarterly">
            <ul class="dropdown__thirdquarterly">
                <span class="title">Third Quarter</span>
                <p class="view-detail">View Detail <i class="bi bi-caret-down-fill"></i></p>
                <ul class="down__thirdquarterly">
                    <li>July Revenue: <b>$ {{monthlyRevenue.6.totalRevenue}}</b></li>
                    <li>August Revenue: <b>$ {{monthlyRevenue.7.totalRevenue}}</b></li>
                    <li>September Revenue: <b>$ {{monthlyRevenue.8.totalRevenue}}</b></li>
                </ul>
                <li class="bottom-total">Total Third Quarter Revenue: <b>$ {{quarterlyRevenue.2.totalRevenue}}</b></li>
            </ul>
        </div>
        <div class="content__total-quarterly fourth-quarterly">
            <ul class="dropdown__fourthquarterly">
                <span class="title">Fourth Quarter</span>
                <p class="view-detail">View Detail <i class="bi bi-caret-down-fill"></i></p>
                <ul class="down__fourthquarterly">
                    <li>October Revenue: <b>$ {{monthlyRevenue.9.totalRevenue}}</b></li>
                    <li>November Revenue: <b>$ {{monthlyRevenue.10.totalRevenue}}</b></li>
                    <li>December Revenue: <b>$ {{monthlyRevenue.11.totalRevenue}}</b></li>
                </ul>
                <li class="bottom-total">Total Fourth Quarter Revenue: <b>$ {{quarterlyRevenue.3.totalRevenue}}</b></li>
            </ul>
        </div>
    </div>
    <div id="user-chart" class="user-chart" data-count-company="{{countCompany}}" data-count-user="{{countUser}}">
        <h1><span class="material-symbols-outlined">donut_small</span> Doughnut Chart user</h1>
        <canvas id="pieChart" width="400" height="400"></canvas>
        <div class="percentage-bar">
            <h2>Summary</h2>
            <div class="frame-percent">
                <div class="percent-user">
                    <span class="data-count-user"></span>
                </div>
            </div>
            <div class="frame-percent">
                <div class="percent-company">
                    <span class="data-count-company"></span>
                </div>
            </div>
        </div>
    </div>
    <div id="data-table-user" class="list-user">
        <h1><i class="bi bi-table"></i> Data Table User</h1>
        <div class="header__list-user">
            <span>Full Name</span>
            <span class="role">Type User</span>
            <span>Email</span>
            <span class="phone">Phone</span>
            <span class="action">Action</span>
        </div>
        {{#each listUser}}
        <div class="body__list-user">
            <span><img src="{{getAvatar this}}" alt="">{{this.fullname}}</span>
            <span class="role">{{this.role}}</span>
            <span>{{this.email}}</span>
            <span class="phone">{{this.phone}}</span>
            <div class="action">
                <span class="edit-user"><i class="bi bi-gear"></i></span>
                <form action="/admin/deleteUser/{{this._id}}?_method=DELETE" method="POST">
                    <button class="remove-user" type="button"><i class="bi bi-trash3"></i></button>
                </form>
            </div>
        <form class="box__edit-user" action="/admin/updateUser/{{this._id}}?_method=PUT" method="POST">
            <h1>Edit For {{this.fullname}}</h1>
            <div class="main__edit-user">
                <label for="fullname">Full Name</label>
                <input type="text" name="fullname" id="fullname" value="{{this.fullname}}">
            </div>
            <div class="main__edit-user">
                <label for="password">Password</label>
                <input type="password" name="password" id="password" placeholder="**********">
            </div>
            <div class="main__edit-user">
                <label for="email">Email</label>
                <input type="text" name="email" id="email" value="{{this.email}}">
            </div>
            <div class="main__edit-user">
                <label for="phone">Phone</label>
                <input type="text" name="phone" id="phone" value="{{this.phone}}">
            </div>
            <div class="main__edit-user main__checkbox">
                <input id="checkbox" type="checkbox" required>
                <label for="checkbox">Agree to the changes</label>
            </div>
            <div class="submit__edit-user">
                <button type="submit">Save Edit</button>
            </div>
        </form>
        </div>
        {{/each}}
        <div class="pagination" style="padding-top: 20px; width: 100%; border-top: 1px solid #CACACA">
            {{#each pages}}
            <a href="/admin?page={{this}}#data-table-user" data-page-user="{{this}}">{{this}}</a>
            {{/each}}
        </div>
    </div>
    <div id="job" class="main-job__circle-chart">
        <div class="box__circle-chart box__cirle-chart-ads">
            <h1>Advertised Jobs</h1>
            <div class="circle-chart">
                <div class="content"></div>
            </div>
        </div>
        <div class="box__circle-chart box__cirle-chart-high">
            <h1>High Paying Jobs</h1>
            <div class="circle-chart">
                <div class="content"></div>
            </div>
        </div>
        <div class="box__circle-chart box__cirle-chart-normal">
            <h1>Normal Jobs</h1>
            <div class="circle-chart">
                <div class="content"></div>
            </div>
        </div>
        <div class="box__circle-chart box__cirle-chart-locked">
            <h1>Locked Jobs</h1>
            <div class="circle-chart">
                <div class="content"></div>
            </div>
        </div>
    </div>
    <div class="chart-job"
    data-job-count="{{jobCount}}"
    data-postjob-count="{{countPostJob}}"
    data-adsjob-count="{{countPrioritize}}"
    data-lockedjob-count="{{lockedJobCount}}">
    <h1><i class="bi bi-bar-chart-fill"></i> Bar Chart Total Jobs</h1>
        <canvas id="jobChart" width="400" height="200"></canvas>
    </div>
    <div class="total-job__detail">
        <h1>Detail Jobs</h1>
        <p class="job-available"></p>
        <p class="available">Total Available Jobs</p>
        <p class="total-jobs">Total Jobs: <b>{{jobCount}} Jobs</b></p>
        <p class="adsjob">Advertised Jobs: <b>{{countPrioritize}} Jobs</b></p>
        <p class="highpayingjob">High Paying Jobs: <b>{{countPostJob}} Jobs</b></p>
        <p class="normaljob"></p>
        <p class="locked-jobs">Locked Jobs: <b>-{{lockedJobCount}} Jobs</b></p>
    </div>
    <div id="data-table-jobs" class="list-job">
        <h1><i class="bi bi-table"></i> Data Table Jobs</h1>
        <div class="header__list-job">
            <span class="namejob">Name Job</span>
            <span class="ownerjob">Owner</span>
            <span class="statusjob">Status</span>
            <span class="datejob">Date Posting</span>
            <span class="action">Action</span>
        </div>
        {{#each listJob}}
        <div class="body__list-job">
            <span class="name">{{this.jobname}}</span>
            <span class="owner"><img src="/{{this.avatar}}" alt=""> {{this.companyname}}</span>
            <span class="status" data-status="{{this.active}}"></span>
            <span class="date">{{this.createdAt}}</span>
            <form class="action" action="/admin/deleteJob/{{this._id}}?_method=DELETE" method="POST"><button class="remove-job" type="button"><i class="bi bi-trash3"></i></button></form>
        </div>
        {{/each}}
        <div class="pagination" style="padding-top: 20px; width: 100%;">
            {{#each pages}}
            <a href="/admin?pageJob={{this}}#data-table-jobs" data-page-admin="{{this}}">{{this}}</a>
            {{/each}}
        </div>
    </div>
<div class="overflow"></div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-annotation/1.0.2/chartjs-plugin-annotation.min.js"></script>
<script>
    var overflowAdmin = document.querySelector('.container-admin .overflow');
    var body = document.querySelector('body')
    //check value before delete user & edit user
    var emailAdminCheck = document.querySelector('.container-admin').getAttribute('data-admin');
    var boxListUser = document.querySelectorAll('.body__list-user');
    boxListUser.forEach(function(user){
        var clickDeleteUser = user.querySelector('.action form .remove-user');
        var formDeleteUser = user.querySelector('.action form');
        clickDeleteUser.addEventListener('click',()=>{
            let check = prompt("Please enter your email to delete this user")
            if(check !== emailAdminCheck){
                alert('Wrong Email')
            }
            else{
                formDeleteUser.submit()
            }
        });
        var clickEditUser = user.querySelector('.action .edit-user');
        var boxEditUser = user.querySelector('.box__edit-user');
        clickEditUser.addEventListener('click',()=>{
            boxEditUser.style.display = 'flex';
            overflowAdmin.style.display = 'block';
            body.classList.add('modal-open');
        });
        overflowAdmin.addEventListener('click',()=>{
            boxEditUser.style.display = 'none';
            overflowAdmin.style.display = 'none';
            body.classList.remove('modal-open');
        });
    });
    //check status job
    var boxListJob = document.querySelectorAll('.body__list-job');
    boxListJob.forEach(function(job){
        var textStatus = job.querySelector('.status');
        var valueStatus = textStatus.getAttribute('data-status');
        if(valueStatus == 'false'){
            textStatus.innerHTML = 'Locked'
            textStatus.style.cssText = 'background-color: rgba(252,4,4, 0.6);'
        }
        else{
            textStatus.innerHTML = 'Ongoing'
            textStatus.style.cssText = 'background-color: rgba(4,252,68,0.6);'
        };
        var clickDeleteJob = job.querySelector('.container-admin .list-job .body__list-job .action .remove-job');
        var formDeleteJob = job.querySelector('.container-admin .list-job .body__list-job .action');
        clickDeleteJob.addEventListener('click',()=>{
            let check = prompt("Please enter your email to delete this job")
            if(check !== emailAdminCheck){
                alert('Wrong Email')
            }
            else{
                formDeleteJob.submit();
            }
        });
    });
    // total revenue
    var dataTotalAds = parseFloat(document.querySelector('.total-ads').getAttribute('data-total-ads'));
  var dataTotalPostJob = parseFloat(document.querySelector('.total-postjob').getAttribute('data-total-postjob'));
  var dataTotalRefuned = parseFloat(document.querySelector('.total-refund').getAttribute('data-total-refuned'));
  var textTotalRevenue = document.querySelector('.total-revenue');
  var dataTotalRevenue = dataTotalAds + dataTotalPostJob + dataTotalRefuned;
  textTotalRevenue.innerHTML = 'Total Revenue: ' + `<b>$ ${dataTotalRevenue}</b>`;
    // chart total revenue
  var ctx = document.querySelector('.revenue-chart #myChart').getContext('2d');
  var totalYears = parseFloat(document.querySelector('.revenue-chart').getAttribute('data-total'));
  var totalCurrentMonth = parseFloat(document.querySelector('header .box__total-thismonth .total-content').getAttribute('data-current-month'));
  var monthlyRevenues = [];
    var revenueChartElement = document.querySelector('.revenue-chart');
    for (var i = 0; i <= 11; i++) {
    var monthlyRevenue = revenueChartElement.getAttribute(`data-monthly${i}`);
    monthlyRevenues.push(parseFloat(monthlyRevenue));
    }
    console.log(monthlyRevenues)
    /*var quarterlyRevenues = []
    for (var k = 0; k <= 3; k++){
        var quarterlyRevenue = revenueChartElement.getAttribute(`data-quaterly${k}`);
        quarterlyRevenues.push(parseFloat(quarterlyRevenue));
    }
    console.log(quarterlyRevenues)
    */
function getRandomColor() {
    var r = Math.floor(Math.random() * 256);
    var g = Math.floor(Math.random() * 256);
    var b = Math.floor(Math.random() * 256);
    var a = 0.7;

    return `rgba(${r}, ${g}, ${b}, ${a})`;
}

var backgroundColors = [];
var borderColors = [];
for (var i = 0; i < 12; i++) {
    var color = getRandomColor();
    backgroundColors.push(color);
    borderColors.push(color);
}
var revenueData = {
        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
        datasets: [{
            label: 'Revenue',
            data: monthlyRevenues,
            backgroundColor: backgroundColors,
            borderColor: borderColors,
            borderWidth: 1
        }]
    };
var revenueChart = new Chart(ctx, {
    type: 'bar',
    data: revenueData,
    options: {
        scales: {
            y: {
                beginAtZero: true,
                max: totalYears + 100
            }
        },
        plugins: {
            annotation: {
                annotations: [
                    {
                        type: 'line',
                        mode: 'vertical',
                        scaleID: 'x',
                        value: 2.5, 
                        borderColor: 'black',
                        borderWidth: 2,
                        label: {
                            content:'1st quarter',
                            enabled: true,
                            position: 'end',
                            font: {
                                size: 8
                            }
                        }
                    },
                    {
                        type: 'line',
                        mode: 'vertical',
                        scaleID: 'x',
                        value: 5.5, 
                        borderColor: 'black',
                        borderWidth: 2,
                        label: {
                            content:'2nd quarter',
                            enabled: true,
                            position: 'end',
                            font: {
                                size: 8
                            }
                        }
                    },
                    {
                        type: 'line',
                        mode: 'vertical',
                        scaleID: 'x',
                        value: 8.5,
                        borderColor: 'black',
                        borderWidth: 2,
                        label: {
                            content:'3rd quarter',
                            enabled: true,
                            position: 'end',
                            font: {
                                size: 8
                            }
                        }
                    },
                    {
                        type: 'line',
                        mode: 'horizontal',
                        scaleID: 'y',
                        value: totalYears,
                        borderColor: 'rgba(255, 0, 0, 0.2)',
                        borderWidth: 2,
                        label: {
                            content: 'Total Revenue: ' + totalYears,
                            enabled: true,
                            position: 'right',
                            font: {
                                size: 8
                            }
                        }
                    }
                ]
            }
        }
    }
});
// check total user
var textTotalUser = document.querySelector('.box__total-user .total-content');
var dataUser = textTotalUser.getAttribute('data-user');
var dataCompany = textTotalUser.getAttribute('data-company');
var totalUser = parseInt(dataUser) + parseInt(dataCompany);
textTotalUser.innerHTML = '<i class="bi bi-people-fill"></i> ' + " " + totalUser;
//click detail quarterly
var clickDetailFirst = document.querySelector('.container-admin .detail-revenue .content__total-quarterly ul.dropdown__firstquarterly p.view-detail');
var clickDetailSecond = document.querySelector('.container-admin .detail-revenue .content__total-quarterly ul.dropdown__secondquarterly p.view-detail');
var clickDetailThird = document.querySelector('.container-admin .detail-revenue .content__total-quarterly ul.dropdown__thirdquarterly p.view-detail');
var clickDetailFourth = document.querySelector('.container-admin .detail-revenue .content__total-quarterly ul.dropdown__fourthquarterly p.view-detail');
var menuDetailFirst = document.querySelector('.container-admin .detail-revenue .content__total-quarterly .down__firstquarterly');
var menuDetailSecond = document.querySelector('.container-admin .detail-revenue .content__total-quarterly .down__secondquarterly');
var menuDetailThird = document.querySelector('.container-admin .detail-revenue .content__total-quarterly .down__thirdquarterly');
var menuDetailFourth = document.querySelector('.container-admin .detail-revenue .content__total-quarterly .down__fourthquarterly');
function updateArrow() {
    if (menuDetailFirst.style.display === 'block') {
        clickDetailFirst.innerHTML = 'View Detail <i class="bi bi-caret-up-fill"></i>';
    } else {
        clickDetailFirst.innerHTML = 'View Detail <i class="bi bi-caret-down-fill"></i>';
    }

    if (menuDetailSecond.style.display === 'block') {
        clickDetailSecond.innerHTML = 'View Detail <i class="bi bi-caret-up-fill"></i>';
    } else {
        clickDetailSecond.innerHTML = 'View Detail <i class="bi bi-caret-down-fill"></i>';
    }

    if (menuDetailThird.style.display === 'block') {
        clickDetailThird.innerHTML = 'View Detail <i class="bi bi-caret-up-fill"></i>';
    } else {
        clickDetailThird.innerHTML = 'View Detail <i class="bi bi-caret-down-fill"></i>';
    }

    if (menuDetailFourth.style.display === 'block') {
        clickDetailFourth.innerHTML = 'View Detail <i class="bi bi-caret-up-fill"></i>';
    } else {
        clickDetailFourth.innerHTML = 'View Detail <i class="bi bi-caret-down-fill"></i>';
    }
};
clickDetailFirst.addEventListener('click', (event) => {
    if (menuDetailFirst.style.display === 'block') {
        menuDetailFirst.style.display = 'none';
    } else {
        menuDetailFirst.style.display = 'block';
    }
    updateArrow()
    event.stopPropagation();
});
clickDetailSecond.addEventListener('click', (event) => {
    if (menuDetailSecond.style.display === 'block') {
        menuDetailSecond.style.display = 'none';
    } else {
        menuDetailSecond.style.display = 'block';
    }
    updateArrow()
    event.stopPropagation();
});
clickDetailThird.addEventListener('click', (event) => {
    if (menuDetailThird.style.display === 'block') {
        menuDetailThird.style.display = 'none';
    } else {
        menuDetailThird.style.display = 'block';
    }
    updateArrow()
    event.stopPropagation();
});
clickDetailFourth.addEventListener('click', (event) => {
    if (menuDetailFourth.style.display === 'block') {
        menuDetailFourth.style.display = 'none';
    } else {
        menuDetailFourth.style.display = 'block';
    }
    updateArrow()
    event.stopPropagation();
});
document.addEventListener('click', (event) => {
    menuDetailFirst.style.display = 'none';
    menuDetailSecond.style.display = 'none';
    menuDetailThird.style.display = 'none';
    menuDetailFourth.style.display = 'none';
    updateArrow()
});
menuDetailFirst.addEventListener('click', (event) => {
    event.stopPropagation();
});
menuDetailSecond.addEventListener('click', (event) => {
    event.stopPropagation();
});
menuDetailThird.addEventListener('click', (event) => {
    event.stopPropagation();
});
menuDetailFourth.addEventListener('click', (event) => {
    event.stopPropagation();
});
if(menuDetailFirst.style.display === 'block'){
    clickDetailFirst.innerHTML = 'View Detail <i class="bi bi-caret-up-fill"></i>'
}
else{
    clickDetailFirst.innerHTML = 'View Detail <i class="bi bi-caret-down-fill"></i>'
}
// chart user
var dataCountUser = parseInt(document.querySelector('.user-chart').getAttribute('data-count-user'));
var dataCountCompany = parseInt(document.querySelector('.user-chart').getAttribute('data-count-company'));
console.log(dataCountUser , dataCountCompany)
var ctx = document.getElementById('pieChart').getContext('2d');
var data = {
    labels: ['User', 'Company'],
    datasets: [{
        data: [dataCountUser, dataCountCompany],
        backgroundColor: ['rgba(254,210,0,0.5)', 'rgba(0,114,188,0.5)']
    }]
};
var pieChart = new Chart(ctx, {
    type: 'doughnut',
    data: data
});
var userPercentage = (dataCountUser / (dataCountUser + dataCountCompany)) * 100;
var companyPercentage = 100 - userPercentage;
console.log(userPercentage)
document.querySelector('.percent-user').style.width = userPercentage + "%";
document.querySelector('.percent-company').style.width = companyPercentage + "%";
var textDataCountUser = document.querySelector('.container-admin .user-chart .percentage-bar .percent-user .data-count-user');
var textDataCountCompany = document.querySelector('.container-admin .user-chart .percentage-bar .percent-company .data-count-company');
textDataCountUser.innerHTML = userPercentage.toFixed(2) + '%';
textDataCountCompany.innerHTML = companyPercentage.toFixed(2) + '%';
// chart circle current month
var percentageCurrent = (totalCurrentMonth / totalYears) * 100;
var circleChartCurrent = document.querySelector('.main__revenue-detail .circle-chart');
circleChartCurrent.style.background = `conic-gradient(from 0deg, #D9AFD9 0%, #97D9E1 ${percentageCurrent}%, lightgray ${percentageCurrent}%, lightgray 100%)`;
var contentCurrent = document.querySelector('.main__revenue-detail .circle-chart .content');
contentCurrent.innerHTML = parseFloat(percentageCurrent.toFixed(2)) + '%';
// pagination list user
var getPagination = document.querySelectorAll('.list-user .pagination a');
var paginationContainer = document.querySelector('.list-user .pagination');
if (getPagination.length > 1) {
  paginationContainer.style.display = 'flex';
  getPagination[0].classList.add('active')
} else {
  paginationContainer.style.display = 'none';
}
getPagination.forEach(function(pageLink) {
  pageLink.addEventListener('click', function(event) {
    if (pageLink.classList.contains('active')) {
      event.preventDefault();
    } else {
      var page = pageLink.getAttribute('data-page-user');
      localStorage.setItem('currentPageUserAdmin', page);
    }
  });
});
document.addEventListener('DOMContentLoaded', () => {
  const urlParams = new URLSearchParams(window.location.search);
  const pageFromURL = urlParams.get('page');
  const currentPage = pageFromURL || localStorage.getItem('currentPageUserAdmin');
  if (currentPage !== null) {
    getPagination.forEach(function(pageLink) {
      var page = pageLink.getAttribute('data-page-user');
      if (page == currentPage) {
        pageLink.classList.add('active');
      } else {
        pageLink.classList.remove('active');
      }
    });
  }
});
//chart job
var totalJobs = parseInt(document.querySelector('.container-admin .chart-job').getAttribute('data-job-count'));
var advertisedJobs = parseInt(document.querySelector('.container-admin .chart-job').getAttribute('data-adsjob-count')) 
var paidJobs = parseInt(document.querySelector('.container-admin .chart-job').getAttribute('data-postjob-count')) 
var blockedJob = parseInt(document.querySelector('.container-admin .chart-job').getAttribute('data-lockedjob-count')) 
var otherJobs = totalJobs - advertisedJobs - paidJobs - blockedJob;

var ctx = document.getElementById('jobChart').getContext('2d');
var chart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: ['Advertised Jobs', 'High Paying Jobs', 'Normal Jobs', 'Locked Jobs'],
        datasets: [
            {
                label: 'Total Of All Jobs',
                data: [advertisedJobs, paidJobs, otherJobs, blockedJob],
                backgroundColor: [
                    'rgba(255, 206, 86, 0.5)',
                    'rgba(255,99,132,0.5)',
                    'rgba(75, 192, 192, 0.5)',
                    'rgba(0, 114, 188, 0.5)'
                ]
            }
        ]
    },
    options: {
        scales: {
            y: {
                beginAtZero: true,
                max: totalJobs + 10
            }
        },
         plugins: {
            annotation: {
                annotations: [
                    {
                        type: 'line',
                        mode: 'horizontal',
                        scaleID: 'y',
                        value: totalJobs,
                        borderColor: 'rgba(255, 0, 0, 0.2)',
                        borderWidth: 2,
                        label: {
                            content: 'Total of all jobs: ' + totalJobs + ' Jobs',
                            enabled: true,
                            position: 'right',
                            font: {
                                size: 8
                            }
                        }
                    }
                ]
            }
        }
    }
});

//pagination list job
var getPaginationJobAdmin = document.querySelectorAll('.list-job .pagination a');
var paginationContainerJobAdmin = document.querySelector('.list-job .pagination');
if (getPaginationJobAdmin.length > 1) {
  paginationContainerJobAdmin.style.display = 'flex';
} else {
  paginationContainerJobAdmin.style.display = 'none';
}
getPaginationJobAdmin.forEach(function(pageLink) {
  pageLink.addEventListener('click', function(event) {
    if (pageLink.classList.contains('active')) {
      event.preventDefault();
    } else {
      var page = pageLink.getAttribute('data-page-admin');
      localStorage.setItem('currentPageJobAdmin', page);
    }
  });
});
document.addEventListener('DOMContentLoaded', () => {
  const urlParams = new URLSearchParams(window.location.search);
  const pageFromURL = urlParams.get('pageJob');
  const currentPage = pageFromURL || localStorage.getItem('currentPageJobAdmin');
  if (currentPage !== null) {
    getPaginationJobAdmin.forEach(function(pageLink) {
      var page = pageLink.getAttribute('data-page-admin');
      if (page == currentPage) {
        pageLink.classList.add('active');
      } else {
        pageLink.classList.remove('active');
      }
    });
  }
});
// chart circle job ads
var percentageAdsJobs = (advertisedJobs / totalJobs) * 100;
var circleChartAdsJobs = document.querySelector('.main-job__circle-chart .box__cirle-chart-ads .circle-chart');
circleChartAdsJobs.style.background = `conic-gradient(from 0deg, #D9AFD9 0%, #97D9E1 ${percentageAdsJobs}%, lightgray ${percentageAdsJobs}%, lightgray 100%)`;
var contentAdsJobs = document.querySelector('.main-job__circle-chart .box__cirle-chart-ads .circle-chart .content');
contentAdsJobs.innerHTML = parseFloat(percentageAdsJobs.toFixed(2)) + '%';

var percentageHighJobs = (paidJobs / totalJobs) * 100;
var circleChartHighJobs = document.querySelector('.main-job__circle-chart .box__cirle-chart-high .circle-chart');
circleChartHighJobs.style.background = `conic-gradient(from 0deg, #8BC6EC 0%, #9599E2 ${percentageHighJobs}%, lightgray ${percentageHighJobs}%, lightgray 100%)`;
var contentHighJobs = document.querySelector('.main-job__circle-chart .box__cirle-chart-high .circle-chart .content');
contentHighJobs.innerHTML = parseFloat(percentageHighJobs.toFixed(2)) + '%';

var percentageNormalJobs = (otherJobs / totalJobs) * 100;
var cicleChartNormalJobs = document.querySelector('.main-job__circle-chart .box__cirle-chart-normal .circle-chart');
cicleChartNormalJobs.style.background = `conic-gradient(from 0deg, #0093E9 0%, #80D0C7 ${percentageNormalJobs}%, lightgray ${percentageNormalJobs}%, lightgray 100%)`;
var contentNormalJobs = document.querySelector('.main-job__circle-chart .box__cirle-chart-normal .circle-chart .content');
contentNormalJobs.innerHTML = parseFloat(percentageNormalJobs.toFixed(2)) + '%';

var percentageBlockedJobs = (blockedJob / totalJobs) * 100;
var cicleChartBlockedJobs = document.querySelector('.main-job__circle-chart .box__cirle-chart-locked .circle-chart');
cicleChartBlockedJobs.style.background = `conic-gradient(from 0deg, rgba(84,212,228,1) 0%, rgba(68,36,164,1) ${percentageBlockedJobs}%, lightgray ${percentageBlockedJobs}%, lightgray 100%)`;
var contentBlockedJobs = document.querySelector('.main-job__circle-chart .box__cirle-chart-locked .circle-chart .content');
contentBlockedJobs.innerHTML = parseFloat(percentageBlockedJobs.toFixed(2)) + '%';

var textJobavailable = document.querySelector('.total-job__detail .job-available');
textJobavailable.innerHTML = totalJobs - blockedJob + ' Jobs';
var textNormalJob = document.querySelector('.total-job__detail .normaljob');
textNormalJob.innerHTML = 'Normal Jobs: ' + `<b>${otherJobs} Jobs</b>`;
// refuned history
var boxHistoryRefuned = document.querySelectorAll('.main__history-refuned');
boxHistoryRefuned.forEach(function(box){
    var textRefunedType = box.querySelector('.refund-type');
    var checkRefunedType = textRefunedType.getAttribute('data-check-type');
    if(checkRefunedType == '30'){
        textRefunedType.innerHTML = 'High Paying';
    }    
    else{
        textRefunedType.innerHTML = 'Advertisement';
    }
})
</script>