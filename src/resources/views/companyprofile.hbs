<div class="main-profile">
    {{#if msg}}
        <div class="alert-message">
            <p>{{msg}}</p>
            <div class="hide-message">
                <i class="bi bi-x-circle"></i>
            </div>
        </div>
    {{/if}}
    <form class="form-company-profile" method="POST" action="/companyprofile/edit?_method=PUT"
        enctype="multipart/form-data">
        <div class="header-profile header-profile-company" id="header-profile"
            style="background:linear-gradient(to right, rgba(0,0,0,0.6), rgba(255,255,255,0.3)),url('{{getBackground company}}') center/cover no-repeat;">
            <label class="changebackground-profile" for="header-profile-file-input"><i class="bi bi-camera-fill"></i>
                Change Background</label>
            <input type="file" name="background" id="header-profile-file-input" style="display: none;">
            <div class="header-main-text">
                <span class="header-profile-primary">Hello {{getCompanyname company}} Company</span>
                <span class="header-profile-secondary">This page is your Company profile. Clicking on the settings
                    button
                    allows you to edit your company information</span>
            </div>
            <button class="btn-setting" type="button">Setting <i class="bi bi-gear"></i></button>
        </div>
        <div class="content-profile company-profile">
            <div class="profile-img">
                <label for="file-user"><img class="user-avatar" src="{{getAvatarcompany company}}" alt=""
                        onerror="this.src='/img/notfoundavatar.jpeg'"></label>
                <input id="file-user" name="avatar" type="file" accept="image/*">
                <label for="file-user" class="edit-img edit-logo"><span>Change Logo</span></label>
                <label class="camera-edit" for="file-user"><i class="bi bi-camera"></i></label>
            </div>
            <div class="content-profile-main">
                <span>COMPANY INFORMATION</span>
                <div class="about-company-profile">
                    <div class="about-user">
                        <label for="education">Company Name</label>
                        <input id="education" type="text" name="companyName" placeholder="ViggaCareers"
                            value="{{getCompanyname company}}">
                    </div>
                    <div class="about-user ">
                        <label for="skills">Compnany Address</label>
                        <input id="skills" type="text" name="companyAddress" placeholder="124 Tran Hung Dao, P3 , Q.TB"
                            value="{{getCompanyaddress company}}">
                    </div>
                    <div class="about-user">
                        <label for="certifications">Company Field</label>
                        <input id="certifications" type="text" name="companyField" placeholder="IT-Sofware"
                            value="{{getCompanyfield company}}">
                    </div>
                    <div class="about-user">
                        <label for="taxcode">Tax Code</label>
                        <input id="taxcode" type="text" name="taxCode" placeholder="2556789"
                            value="{{getTaxcode company}}">
                    </div>
                    <div class="about-user ">
                        <label for="comapanyemail">Company Email</label>
                        <input id="comapanyemail" type="text" name="companyEmail" placeholder="name@example.com"
                            value="{{getCompanyemail company}}">
                    </div>
                    <div class="about-user ">
                        <label for="comapanyphone">Company Phone</label>
                        <input id="comapanyphone" type="text" name="companyPhone" placeholder="07055548"
                            value="{{getCompanyphone company}}">
                    </div>
                    <div class="about-user ">
                        <label for="companyyearsestablished">Established Date</label>
                        <input id="companyyearsestablished" type="date" name="establisheddate" placeholder="70 Years"
                            value="{{getEstablisheddate company}}">
                    </div>
                    <div class="about-user ">
                        <label for="companyyearsinbusiness">No. OfYears In Business</label>
                        <input id="companyyearsinbusiness" type="text" name="companyYears" placeholder="70 Years"
                            value="{{getCompanyyears company}}">
                    </div>
                    <div class="about-user ">
                        <label for="TOB">Type of business</label>
                        <select id="TOB" name="typeOfBusiness">
                            <option value="" selected>{{getTOB company}}</option>
                            <option value="Sole Proprietorships">Sole Proprietorships.</option>
                            <option value="Partnerships">Partnerships.</option>
                            <option value="JSC">Corporations. (JSC)</option>
                            <option value="S Corporations">S Corporations.</option>
                            <option value="CO., LTD">Limited Liability Company. (CO., LTD)</option>
                            <option value="PTE">Private Enterprise (PTE)</option>
                        </select>
                    </div>
                    <div class="about-user ">
                        <label for="companyyears">No. Of Employee</label>
                        <input id="companyyears" type="text" name="noofemployee" placeholder="70 Years"
                            value="{{getNoofemployee company}}">
                    </div>
                    <div class="about-user about-user-desc-company">
                        <label for="experience">Company Description</label>
                        <textarea id="experience" type="text" name="companyDesc"
                            placeholder="ViggaCareers provides software and services to energy, water and communications industries. The company was founded in 1971 and is headquartered in Viet Nam.">{{getCompanydesc company}}</textarea>
                    </div>
                    <div class="about-user about-user-desc-company">
                        <label for="experience">Service Description</label>
                        <textarea id="experience" type="text" name="serviceDesc"
                            placeholder="ViggaCareers provides software and services to energy, water and communications industries. The company was founded in 1971 and is headquartered in Viet Nam.">{{getService company}}</textarea>
                    </div>
                    <div class="about-user about-user-desc-company">
                        <label for="experience">Mission</label>
                        <textarea id="experience" type="text" name="mission"
                            placeholder="ViggaCareers provides software and services to energy, water and communications industries. The company was founded in 1971 and is headquartered in Viet Nam.">{{getMission company}}</textarea>
                    </div>
                    <div class="about-user about-user-desc-company">
                        <label for="experience">History</label>
                        <textarea id="experience" type="text" name="history" placeholder="Founded in 1971, Hansen is a global provider of software and services, serving the most demanding energy and communications brands around the world.
                            Our early origins in the management of customer and organisational data has served our customers well over the years. As a pioneer in providing some of the first web-based self-service and browser- based customer care solutions to the market we have continued to hone our software to enable energy and communications service providers to create new products and services, deliver them flawlessly, and engage customers with excellence – powered by the Hansen Create-Deliver-EngageTM suite of software applications.
                            In the last decade we have grown exponentially through several progressive and strategic acquisitions that have expanded our geographic scope and enhanced the business of our valued customers.
                            Today we are on the cusp of a new journey with our customers, to help them Power the NextTM age of communications and energy related experiences beyond the essentials of providing basic core energy and connectivity.">
                            {{getHistory company}}
                        </textarea>
                    </div>
                </div>
                <span>TEAM LEADERSHIP</span>
                <div class="listleadership">
                    <div class="listleadership-action">
                        <button class="btn-listleadership" type="button">Add Leadership</button>
                    </div>
                    {{!-- form update --}}
                    <ul>
                        {{#each leadership}}
                        <li class="content-listleadership">
                            <img src="{{getAvatarleadership this}}" alt=""
                                onerror="this.src='/img/notfoundavatar.jpeg'">
                            <div class="infoleadership">
                                <span class="nameleadership">{{this.name}}</span>
                                <span class="position">{{this.position}}</span>
                            </div>
                            <div class="action-leader">
                                <i class="bi bi-three-dots-vertical"></i>
                                <div class="show-action">
                                    <span class="update-leader">Review</span>
                                    <a href="" data-id="{{this._id}}" class="leadership-btn__remove"
                                        data-bs-toggle="modal" data-bs-target="#delete-leadership">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                </div>
                            </div>
                            <div id="updateleadership">
                                <div class="book">
                                    <p>{{this.introduce}}</p>
                                    <span class="close-book"><i class="bi bi-x-lg"></i></span>
                                    <div class="cover">
                                        <img src="{{getAvatarleadership this}}"
                                            onerror="this.src='/img/notfoundavatar.jpeg'">
                                        <h1>{{this.name}}</h1>
                                        <span>{{this.position}}</span>
                                    </div>
                                </div>
                            </div>
                        </li>
                        {{/each}}
                    </ul>
                    <div class="leadership-action-view">
                        <button type="button" id="view-more-btn">View more</button>
                        <button type="button" id="view-less-btn">View less</button>
                    </div>
                </div>
                <div class="overplay-review"></div>
                <span>LIST JOBS</span>
                <div class="listjobs">
                    <div class="listjobs-action">
                        <button class="btn-listjobs" type="button">Add New Jobs</button>
                    </div>
                    <ul>
                        {{#each listjob}}
                        <li class="content-listjob" data-blocked={{this.active}}>
                            <span class="namejobs"><i class="bi bi-three-dots-vertical"></i> <a href="/job/{{this._id}}">{{this.jobname}}</a></span>
                            <div class="secondary-listjob">
                                <span class="locationjobs"><i class="bi bi-geo"></i> Location:
                                    {{this.joblocation}}</span>
                                <span class="timejobs"><i class="bi bi-calendar-date"></i> {{this.createdAt}}</span>
                            </div>
                            <a class="cv-applied" href="/CVManager?id={{this._id}}"><i class="bi bi-briefcase-fill"></i>
                                CV applied ({{this.appliedCount}} CV)</a>
                            <a title="advertise this job" data-payment="{{this.prioritize}}"
                                data-id-paymen="{{this._id}}" class="payment" href="/pay/{{this._id}}"><i
                                    class="bi bi-star"></i></a>
                            <div class="remove-blocked" data-remove-block="{{this._id}}">
                                <span class="remove"><i class="bi bi-trash3-fill"></i></span>
                                <span class="blocked"><i class="bi bi-unlock-fill"></i></span>
                                <span class="request" title="Request Refund"><i class="bi bi-info-circle-fill"></i></span>
                                <div class="request-sending">
                                    <div class="request-ads">
                                        <label for="ads">Advertising Refund</label>
                                        <input name="request" type="checkbox" class="adsvalue" id="ads" value="prioritize">
                                    </div>
                                    <div class="request-ads">
                                        <label for="high">High Paying Refund</label>
                                        <input name="request" type="checkbox" class="highvalue" id="high" value="post job">
                                    </div>
                                    <button type="button" class="submit-request">Send Request</button>
                                </div>
                            </div>
                        </li>
                        {{/each}}
                    </ul>
                    <ul class="listpagejob">
                    </ul>
                </div>
                <div class="profile-action">
                    <button class="btn-save" type="submit">Save Profile</button>
                </div>
            </div>
        </div>
    </form>
    <div class="overplay-postjob"></div>
    {{!-- form post job --}}
    <form id="postjob" method="POST" action="/companyprofile/postjob">
        <h2>New Job</h2>
        <div class="info-job">
            <label for="jobname">Job Name</label>
            <input id="jobname" name="jobname" placeholder="Developer Engineer" type="text" required>
        </div>
        <div class="info-job jobdesc">
            <label for="jobdesc">Job Description</label>
            <textarea id="jobdesc" name="jobdesc" placeholder="Customer Engineering Connector Technology for JOEM
- Customer Engineering for PS-CC products for JOEM (Connectors, Fuel cell air valves, Charging solutions, Fuel pump modules, General purpose actuators, Accelerator pedal modules, etc.). The main responsibility is Connector Technology.
- JOEM向けPS-CC製品（コネクター、燃料電池用エアバルブ、チャージングソリューション、燃料ポンプモジュール、ターボ用電制アクチュエーター、アクセルペダルモジュール等）の技術窓口。主にコネクターを担当。"
                type="text" required></textarea>
        </div>
        <div class="info-job jobdesc">
            <label for="jobdesc">Job Requirements</label>
            <textarea id="jobdesc" name="jobrequirement" placeholder="Qualifications
- Proactiveness and openness to learn, work and collaborating in global team
- Technical background / engineering degree or similar
- Native or fluent in Japanese and advanced level in English skills for customer and global team communication
- Good understanding of automotive technology, e/wire harness experience or knowledge is a plus
- Good presentation and negotiation skills is a plus
- オープンなマインドセットで積極的に学び、グローバルチームど協力して働くことが出来る
- 技術的な仕事の経験がある、工学部の学位またはそれと同等の学力
- 顧客（JOEM）及び海外拠点とのコミュニケーションに必要なネイティブレベルの日本語力とビジネスレベルの英語力
- 自動車業界、特にコネクターやワイヤーハーネス関連の製品知識や業務経験(あれば望ましい)
- プレゼンテーション力と交渉力 (あれば望ましい)" type="text" required></textarea>
        </div>
        <div class="info-job">
            <label class="label-benefit" for="namecompanyjob">Benefit</label>
            <textarea id="namecompanyjob" name="benefit" type="text" required></textarea>
        </div>
        <div class="info-job info-job-salary">
            <div class="job-position">
                <label for="position">Position</label>
                <input type="text" name="position" id="position" placeholder="Manager" required>
            </div>
            <div class="job-salary" style="position:relative">
                <label for="salary-range">Salary</label>
                <input type="text" name="salary" id="salary-range" placeholder="500$-1000$ | Negotiable" required>
                <p class="alert-salary" style="display: none; color: red; margin-bottom: unset; position: absolute; bottom: -24px; left: 4px">You can only fill in numbers or Negotiable</p>
            </div>
            <div class="job-location">
                <label for="joblocation">Job Locations</label>
                <select id="joblocation" name="joblocation" required>
                    <option selected>Select Your Location</option>
                </select>
            </div>
        </div>
        <div class="info-job postjob-cancle">
            <button type="submit" class="btn-postjob">Post Job</button>
            <button type="button" class="btn-postjob-cancle">Cancle</button>
        </div>

    </form>
    <div class="overplay-postleadership"></div>
    {{!-- form add leader --}}
    <form id="postleadership" method="POST" action="/companyprofile/leadership" enctype="multipart/form-data">
        <h2>Add Leadership</h2>
        <div class="avatar-leadership">
            <label class="leadership-avatar" for="avatar-leadership"><img class="leadership-img"
                    src="{{getAvatarleadership leadership}}" alt=""></label>
            <input name="avatarleadership" type="file" id="avatar-leadership">
            <label class="eidt__avatar-leadership" for="avatar-leadership">Change Avatar</label>
        </div>
        <div class="info-job">
            <label for="jobname">Name</label>
            <input id="jobname" name="nameleadership" placeholder="BuuMJ" type="text" required>
        </div>
        <div class="info-job">
            <label for="jobname">Postion</label>
            <input id="jobname" name="position" placeholder="CEO" type="text" required>
        </div>
        <div class="info-job jobdesc">
            <label for="jobdesc">Introduce</label>
            <textarea id="jobdesc" name="introduce"
                placeholder="IT executive with over 30 years of experience, including management of mid to large size organizations, corporate development, business operations, and strategy. Current CEO and Managing Director at Hansen Technologies Limited.
Andrew joined Hansen Technologies in 1990, and quickly began to transform the business and then ASX listed the company in 2000. Andrew’s IT expertise combined with his strong business acumen has built a diversified global company delivering market leading billing and customer care solutions in over 80 countries.
Andrew leads the strategic direction of the business with a dedicated and diverse team of over 1500 industry experts delivering solutions to some of the globe’s leading companies. Hansen’s Create-Deliver-Engage product suite is now used by over 500 substantial companies worldwide."
                type="text" required></textarea>
        </div>
        <div class="info-job postleader-cancle">
            <button type="submit" class="btn-postjob btn-postleader">Add Leadership</button>
            <button type="button" class="btn-postleader-cancle">Cancle</button>
        </div>
    </form>
</div>
{{! confirm delete }}

<div id="delete-leadership" class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="font-weight: 700;">Do You Wanna Delete This Leadership</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p style="font-size:22px; ffont-weight: 600;">Are You Sure ?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancle</button>
                <button type="button" id="btn-delete-leadership" class="btn btn-danger">Delete Leadership</button>
            </div>
        </div>
    </div>
</div>
{{! delete hidden form }}
<form method="POST" name="delete-leadership-form"></form>
{{!-- delete job form --}}
<form method="POST" class="form__remove-job"></form>
{{!-- blocked job form --}}
<form method="POST" class="form__blocked-job"></form>
{{!-- request refund form --}}
<form class="form__request" method="POST" >
    <input type="text" name="type" id="allformrequestsending" value="123" hidden>
</form>
<script>
    var deleteLeadership = document.getElementById('delete-leadership')
    var leadershipID;
    var btnDeleteLeadership = document.getElementById('btn-delete-leadership')
    var deleteForm = document.forms['delete-leadership-form'];
    deleteLeadership.addEventListener('show.bs.modal', event => {
        var button = event.relatedTarget
        leadershipID = button.getAttribute('data-id')
        btnDeleteLeadership.onclick = function () {
            deleteForm.action = '/companyprofile/leadership/delete/' + leadershipID + '?_method=DELETE';
            deleteForm.submit();
        }
    })
    //function show categories 63 provinces
document.addEventListener("DOMContentLoaded", function() {
    var provinces = ["An Giang", "Bà Rịa-Vũng Tàu", "Bắc Giang", "Bắc Kạn", "Bạc Liêu", "Bắc Ninh", "Bến Tre", "Bình Định", "Bình Dương", "Bình Phước", "Bình Thuận", "Cà Mau", "Cần Thơ", "Cao Bằng", "Đà Nẵng", "Đắk Lắk", "Đắk Nông", "Điện Biên", "Đồng Nai", "Đồng Tháp", "Gia Lai", "Hà Giang", "Hà Nam", "Hà Nội", "Hà Tĩnh", "Hải Dương", "Hải Phòng", "Hậu Giang", "Hòa Bình", "Hưng Yên", "Khánh Hòa", "Kiên Giang", "Kon Tum", "Lai Châu", "Lâm Đồng", "Lạng Sơn", "Lào Cai", "Long An", "Nam Định", "Nghệ An", "Ninh Bình", "Ninh Thuận", "Phú Thọ", "Phú Yên", "Quảng Bình", "Quảng Nam", "Quảng Ngãi", "Quảng Ninh", "Quảng Trị", "Sóc Trăng", "Sơn La", "Tây Ninh", "Thái Bình", "Thái Nguyên", "Thanh Hóa", "Thừa Thiên-Huế", "Tiền Giang", "TP Hồ Chí Minh", "Trà Vinh", "Tuyên Quang", "Vĩnh Long", "Vĩnh Phúc", "Yên Bái"];
    var select = document.getElementById("joblocation");
    for (var i = 0; i < provinces.length; i++) {
        var option = document.createElement("option");
        option.text = provinces[i];
        option.value = provinces[i];
        select.appendChild(option);
    }
});

    // function get file from input tag
    document.querySelector('#header-profile-file-input').addEventListener('change', function () {
        var fileBackground = this.files[0];
        var readerBackground = new FileReader();
        readerBackground.onload = function (e) {
            document.querySelector('#header-profile').style.backgroundImage = "linear-gradient( 90deg, rgba(0,0,0,0.6), rgba(255,255,255,0.3)), url('" + e.target.result + "') ";
        };
        readerBackground.readAsDataURL(fileBackground);
    });
    //establishment year calculation function
    const establishedDateInput = document.getElementById('companyyearsestablished');
    companyYearsInput = document.getElementById('companyyearsinbusiness');
    establishedDateInput.addEventListener('input', function () {
        const establishedDate = this.value;
        const date1 = new Date(establishedDate);
        const date2 = new Date();
        const diffInMs = date2 - date1;
        const diffInYears = diffInMs / (1000 * 60 * 60 * 24 * 365.25);
        companyYearsInput.value = Math.round(diffInYears);
    });
    //function pagination
    var thisPage = 1;
    var limit = 5;
    var list = document.querySelectorAll('.content-listjob')
    function loadIteam() {
        var beginGet = limit * (thisPage - 1);
        var endGet = limit * thisPage - 1;
        list.forEach((item, key) => {
            if (key >= beginGet && key <= endGet) {
                item.style.display = 'flex';
            } else {
                item.style.display = 'none';
            }
        })
        listPage();
    }
    loadIteam()
    function listPage() {
        var count = Math.ceil(list.length / limit);
        document.querySelector('.listpagejob').innerHTML = '';
        for (i = 1; i <= count; i++) {
            var newPage = document.createElement('li');
            newPage.innerHTML = i;
            document.querySelector('.listpagejob').appendChild(newPage);
            newPage.setAttribute('onclick', "changePage(" + i + ")");
            if (i === thisPage) {
                newPage.classList.add('active');
            }
        }
    }
    function changePage(i) {
        thisPage = i;
        document.querySelectorAll('.listpagejob li').forEach(function (page) {
            page.classList.remove('active');
        });
        document.querySelector('.listpagejob li:nth-child(' + (thisPage) + ')').classList.add('active');
        loadIteam()
    }
    //function view more and view less
    var leadershipList = document.querySelectorAll(".content-listleadership");
    var viewMoreBtn = document.getElementById("view-more-btn");
    var viewLessBtn = document.getElementById("view-less-btn");
    var numToShow = 3;
    var numToShowIncrement = 3;

    for (var i = numToShow; i < leadershipList.length; i++) {
        leadershipList[i].style.display = "none";
    }

    viewMoreBtn.addEventListener("click", function () {
        numToShow += numToShowIncrement;
        for (var i = 0; i < leadershipList.length; i++) {
            if (i < numToShow) {
                leadershipList[i].style.display = "flex";
            } else {
                leadershipList[i].style.display = "none";
            }
        }
        if (numToShow >= leadershipList.length) {
            viewMoreBtn.style.cssText = "opacity: 0; cursor: default;";
            viewLessBtn.style.cssText = "opacity: 1; cursor: pointer; ";
        }
        viewLessBtn.style.cssText = "opacity: 1; cursor: pointer; ";

        // Add event listener for viewLessBtn
        if (viewLessBtn !== null) {
            viewLessBtn.addEventListener("click", function () {
                numToShow -= numToShowIncrement;
                for (var i = 0; i < leadershipList.length; i++) {
                    if (i < numToShow) {
                        leadershipList[i].style.display = "flex";
                    } else {
                        leadershipList[i].style.display = "none";
                    }
                }
                if (numToShow <= numToShowIncrement) {
                    viewLessBtn.style.cssText = "opacity: 0; cursor: default;";
                    viewMoreBtn.style.cssText = "opacity: 1; cursor: pointer; ";
                }
                viewMoreBtn.style.cssText = "opacity: 1; cursor: pointer; ";
            });
        }
    });
</script>
<script>
    var changeBackground = document.querySelector('.changebackground-profile')
    var btnSetting = document.querySelector('.btn-setting');
    var settingProfile = document.querySelector('.content-profile');
    btnSetting.addEventListener('click', () => {
        var computedStyle = getComputedStyle(settingProfile);
        if (computedStyle.display === "none") {
            settingProfile.style.display = "block";
            settingProfile.style.opacity = "0";
            changeBackground.style.bottom = "160px"
            setTimeout(() => {
                settingProfile.style.opacity = "1";
            }, 50);
        }
        else {
            changeBackground.style.bottom = "10px"
            settingProfile.style.opacity = "0";
            setTimeout(() => {
                settingProfile.style.display = "none";
            }, 300);
        }
    })
    var hover = document.querySelector('.user-avatar')
    var edit = document.querySelector('.edit-logo')
    hover.addEventListener('mouseover', () => {
        edit.style.cssText = "display: flex;"
    })
     edit.addEventListener('mouseover', () => {
        edit.style.cssText = "display: flex;"
    })
    edit.addEventListener('mouseout', () => {
        edit.style.cssText = "display: none;"
    })
    hover.addEventListener('mouseout', () => {
        edit.style.cssText = "display: none;"
    })
    var getFile = document.querySelector('#avatar-leadership');
    var changeImg = document.querySelector('.leadership-img');
    getFile.addEventListener('change', () => {
        const chooseFile = getFile.files[0];
        if (chooseFile) {
            const pick = new FileReader();
            pick.addEventListener('load', () => {
                changeImg.setAttribute('src', pick.result);
            });
            pick.readAsDataURL(chooseFile);
        }
    });
    var file = document.querySelector('#file-user');
    var img = document.querySelector('.user-avatar');
    file.addEventListener('change', () => {
        const chooseFile = file.files[0];
        if (chooseFile) {
            const reader = new FileReader();
            reader.addEventListener('load', () => {
                img.setAttribute('src', reader.result);
            });
            reader.readAsDataURL(chooseFile);
        }
    });
    var body = document.querySelector('body');
    var btnJob = document.querySelector('.btn-listjobs');
    var postJob = document.getElementById('postjob');
    var overplay = document.querySelector('.overplay-postjob');
    var cancleJob = document.querySelector('.btn-postjob-cancle');
    btnJob.addEventListener('click', () => {
        postJob.style.display = 'flex';
        overplay.style.display = 'block';
        body.classList.add('modal-open');
    })
    overplay.addEventListener('click', () => {
        postJob.style.display = 'none';
        overplay.style.display = 'none';
        body.classList.remove('modal-open');
    })
    cancleJob.addEventListener('click', () => {
        postJob.style.display = 'none';
        overplay.style.display = 'none';
        body.classList.remove('modal-open');
    })
    var btnLeadership = document.querySelector('.btn-listleadership');
    var postLeadership = document.getElementById('postleadership');
    var overplay2 = document.querySelector('.overplay-postleadership');
    var cancleLeadership = document.querySelector('.btn-postleader-cancle');
    btnLeadership.addEventListener('click', () => {
        postLeadership.style.display = 'flex';
        overplay2.style.display = 'block';
        body.classList.add('modal-open');
    })
    overplay2.addEventListener('click', () => {
        postLeadership.style.display = 'none';
        overplay2.style.display = 'none';
        body.classList.remove('modal-open');
    })
    cancleLeadership.addEventListener('click', () => {
        postLeadership.style.display = 'none';
        overplay2.style.display = 'none';
        body.classList.remove('modal-open');
    })
    var actionLeader = document.querySelectorAll('.action-leader');
    var showActionLeader = document.querySelectorAll('.show-action');
    for (let i = 0; i < actionLeader.length; i++) {
        actionLeader[i].addEventListener('mouseover', () => {
            showActionLeader[i].style.display = 'flex';
        })
        showActionLeader[i].addEventListener('mouseout', () => {
            showActionLeader[i].style.display = 'none'
        })
    }
    var updateLeader = document.querySelectorAll('.update-leader');
    var showUpdateLeader = document.querySelectorAll('#updateleadership');
    var cancleUpdate = document.querySelectorAll('.close-book');
    var overplayReview = document.querySelector('.overplay-review')
    for (let i = 0; i < updateLeader.length; i++) {
        updateLeader[i].addEventListener('click', () => {
            showUpdateLeader[i].style.display = 'flex';
            overplayReview.style.display = 'block'
        })
        cancleUpdate[i].addEventListener('click', () => {
            showUpdateLeader[i].style.display = 'none';
            overplayReview.style.display = 'none';
        })
        overplayReview.addEventListener('click', () => {
            showUpdateLeader[i].style.display = 'none';
            overplayReview.style.display = 'none';
        })
    }
    var listJobPayment = document.querySelectorAll('.content-listjob');
    listJobPayment.forEach(function (job) {
        var checkButtonPayment = job.querySelector('.payment');
        var valuePayment = checkButtonPayment.getAttribute('data-payment');
        var checkBlocked = job.getAttribute('data-blocked');
        console.log(checkBlocked)
        if (valuePayment === 'true') {
            checkButtonPayment.innerHTML = '<i class="bi bi-star-fill"></i>'
            checkButtonPayment.style.cssText = 'color: #fed200;'
        }
        if(checkBlocked == 'false'){
            job.classList.add('active__blocked-item')
            job.querySelector('.blocked').innerHTML = '<i class="bi bi-lock-fill"></i>';
        }
    })
    var jobList = document.querySelectorAll('.content-listjob');
    var formRemoveJob = document.querySelector('.form__remove-job');
    var formBlockedJob = document.querySelector('.form__blocked-job');
    var formRequest = document.querySelector('.form__request');
    var valueAllSending = document.getElementById('allformrequestsending');
    console.log(valueAllSending.value)
    jobList.forEach(function (job) {
        var action = job.querySelector('.namejobs i');
        var menuAction = job.querySelector('.remove-blocked');
        var getIDJob = menuAction.getAttribute('data-remove-block');
        var removeAction = job.querySelector('.remove');
        var blockedAction = job.querySelector('.blocked');
        var clickRequest = job.querySelector('span.request')
        var requestBox = job.querySelector('.request-sending');
        var sendADS = requestBox.querySelector('.adsvalue');
        var sendHigh = requestBox.querySelector('.highvalue');
        var sendAll = requestBox.querySelector('.allvalue')
        var submitRequest = requestBox.querySelector('.submit-request');
        submitRequest.addEventListener('click', (e) => {
    function updateValue() {
        if (sendADS.checked && sendHigh.checked) {
            valueAllSending.value = 'all';
        } else if (sendADS.checked) {
            valueAllSending.value = sendADS.value;
        } else if (sendHigh.checked) {
            valueAllSending.value = sendHigh.value;
        } else {
            valueAllSending.value = '';
        }
    }

    updateValue();

    sendADS.addEventListener('change', updateValue);
    sendHigh.addEventListener('change', updateValue);

    if (valueAllSending.value === '' || valueAllSending.value === null) {
        e.preventDefault();
        alert('Please choose the option you want to send the request.');
        return;
    }
    else{
        formRequest.action = `/companyprofile/request/${getIDJob}`;
        formRequest.submit();
    }
});
        //request sending 
        clickRequest.addEventListener('click',(event)=>{
            requestBox.style.display = 'flex';
            event.stopPropagation
        })
        action.addEventListener('click', (event) => {
            menuAction.style.display = 'flex';
            event.stopPropagation();
        });
        menuAction.addEventListener('click', (event) => {
            event.stopPropagation();
        });
        document.addEventListener('click', () => {
            menuAction.style.display = 'none';
            requestBox.style.display = 'none';
        });
        removeAction.addEventListener('mouseover', () => {
            removeAction.querySelector('i').style.color = '#FC0404'
        });
        removeAction.addEventListener('mouseout', () => {
            removeAction.querySelector('i').style.color = 'black'
        });

        //action
        removeAction.addEventListener('click', () => {
            const userConfirmed = confirm("Are you sure you want to delete this job?");
            if (userConfirmed) {
                formRemoveJob.action = `/companyprofile/delete/${getIDJob}?_method=DELETE`;
                formRemoveJob.submit();
            }
        })
        blockedAction.addEventListener('click', () => {
            formBlockedJob.action = `/companyprofile/blocked/${getIDJob}?_method=PUT`;
            formBlockedJob.submit();
        })
    });
 var submitPostJob = document.querySelector('.btn-postjob');
var textSalary = document.querySelector('#postjob .job-salary #salary-range');
var formPostJob = document.querySelector('#postjob .postjob-cancle .btn-postjob');
var alertSalary = document.querySelector('#postjob .job-salary .alert-salary');

submitPostJob.addEventListener('click', (e) => {
    var salaryValue = textSalary.value;
    var salaryContent = parseInt(salaryValue, 10);
    
    if (salaryContent >= 4000) {
        var isConfirmed = confirm('this job is over 4000$ you need to pay 30$ to be able to post this job.\nIf you agree, please click ok to go to the payment page.\nIf you want to edit the salary, please click cancel.');
        if (!isConfirmed) {
            e.preventDefault();
        }
    }
});

textSalary.addEventListener('input', (e) => {
    var salaryValue = textSalary.value;
    var salaryContent = parseInt(salaryValue, 10);
    alertSalary.style.display = 'none';
    textSalary.style.border = 'unset';
    if (salaryValue !== "Negotiable" && isNaN(salaryContent)) {
        textSalary.style.border = '2px solid red';
        formPostJob.type = 'button';
        alertSalary.style.display = 'inline-block';
    } else {
        formPostJob.type = 'submit';
    }
});
</script>